name: CI

on:
  pull_request:
    branches: [main]

jobs:
  synth:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      id-token: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - uses: ./.github/composite/pnpm-install

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ vars.AWS_REGION }}
          role-duration-seconds: 900

      - name: CDK Synth
        working-directory: infra
        run: pnpm exec cdk synth --all

      - name: CDK Diff (if not first deployment)
        id: cdk-diff
        working-directory: infra
        run: |
          set +e
          pnpm exec cdk diff --all > cdk-diff.txt 2>&1
          diff_exit_code=$?
          set -e

          # CDK diff returns 0 for no changes, 1 for changes, 2+ for errors
          if [ $diff_exit_code -gt 1 ]; then
            echo "CDK diff failed with exit code $diff_exit_code"
            cat cdk-diff.txt
            exit $diff_exit_code
          fi

          echo "diff-output<<EOF" >> $GITHUB_OUTPUT
          cat cdk-diff.txt >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

          if [ $diff_exit_code -eq 1 ]; then
            echo "has-changes=true" >> $GITHUB_OUTPUT
          else
            echo "has-changes=false" >> $GITHUB_OUTPUT
          fi

      - name: Comment CDK diff on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const diffOutput = `${{ steps.cdk-diff.outputs.diff-output }}`;
            const hasChanges = '${{ steps.cdk-diff.outputs.has-changes }}' === 'true';

            const body = hasChanges 
              ? `## ðŸ”„ CDK Diff Results\n\nThe following infrastructure changes will be applied:\n\n\`\`\`diff\n${diffOutput}\n\`\`\``
              : `## âœ… CDK Diff Results\n\nNo infrastructure changes detected.`;

            // Find existing comment
            const comments = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });

            const existingComment = comments.data.find(comment => 
              comment.user.login === 'github-actions[bot]' && 
              comment.body.includes('CDK Diff Results')
            );

            if (existingComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: existingComment.id,
                body: body,
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: body,
              });
            }
